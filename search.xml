<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>django框架——</title>
      <link href="/2016/12/03/django%E6%A1%86%E6%9E%B6_day02/"/>
      <url>/2016/12/03/django%E6%A1%86%E6%9E%B6_day02/</url>
      
        <content type="html"><![CDATA[<h2 id="一、django框架的注意点："><a href="#一、django框架的注意点：" class="headerlink" title="一、django框架的注意点："></a>一、django框架的注意点：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1.如何搭建虚拟环境? 安装虚拟环境的命令 :</span><br><span class="line">  sudo pip install virtualenv</span><br><span class="line">  sudo pip install virtualenvwrapper</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>安装完虚拟环境后，如果提示找不到mkvirtualenv命令，须配置环境变量：</span><br><span class="line">  <span class="number">2.1</span> 创建目录用来存放虚拟环境</span><br><span class="line">   mkdir $HOME/.virtualenvs</span><br><span class="line"></span><br><span class="line">  <span class="number">2.2</span> 打开~/.bashrc文件，并添加如下：</span><br><span class="line">    export WORKON_HOME=$HOME/.virtualenvs</span><br><span class="line">    source /usr/local/bin/virtualenvwrapper.sh</span><br><span class="line">    </span><br><span class="line"><span class="number">3.</span>运行</span><br><span class="line">    source ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>创建虚拟环境的常用两种方式；</span><br><span class="line">    <span class="number">4.1</span>  mkvirtualenv venv_name -p python3</span><br><span class="line">    <span class="number">4.2</span>. mkvirtualenv --python=/usr/local/python3<span class="number">.5</span><span class="number">.3</span>/bin/python venv_name</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>djnango自动生成urls文件配置：</span><br><span class="line">   <span class="number">5.1</span> 在所用的虚拟环境中，例如django_py3/lib/python3<span class="number">.5</span>/site-packages/django/conf下，将project_template/project_name/urls.py-tpl复制到app_template下即可</span><br></pre></td></tr></table></figure><h2 id="二、HTTP协议向服务器传参有4种途径："><a href="#二、HTTP协议向服务器传参有4种途径：" class="headerlink" title="二、HTTP协议向服务器传参有4种途径："></a>二、HTTP协议向服务器传参有4种途径：</h2><h4 id="2-1-URL路径参数"><a href="#2-1-URL路径参数" class="headerlink" title="2.1 URL路径参数:"></a>2.1 URL路径参数:</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># http://127.0.0.1:8000/users/index/2018/beijing</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request,year,city)</span>:</span></span><br><span class="line">    print(<span class="string">"city=&#123;1&#125;,year=&#123;0&#125;"</span>.format(year,city))</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">"ok"</span>)</span><br></pre></td></tr></table></figure><h4 id="2-2-查询字符串（query-string-，形如key1-value1-amp-key2-value2："><a href="#2-2-查询字符串（query-string-，形如key1-value1-amp-key2-value2：" class="headerlink" title="2.2 查询字符串（query string)，形如key1=value1&amp;key2=value2："></a>2.2 查询字符串（query string)，形如key1=value1&amp;key2=value2：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /qs/?a=1&amp;b=2&amp;a=3</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">qs</span><span class="params">(request)</span>:</span></span><br><span class="line">    a = request.GET.get(<span class="string">'a'</span>)</span><br><span class="line">    b = request.GET.get(<span class="string">'b'</span>)</span><br><span class="line">    alist = request.GET.getlist(<span class="string">'a'</span>)</span><br><span class="line">    print(a)  <span class="comment"># 3</span></span><br><span class="line">    print(b)  <span class="comment"># 2</span></span><br><span class="line">    print(alist)  <span class="comment"># ['1', '3']</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">'OK'</span>)</span><br></pre></td></tr></table></figure><h4 id="2-3-请求体传参："><a href="#2-3-请求体传参：" class="headerlink" title="2.3 请求体传参："></a>2.3 请求体传参：</h4><h5 id="2-3-1-表单类型：Form-Data"><a href="#2-3-1-表单类型：Form-Data" class="headerlink" title="2.3.1 表单类型：Form Data"></a>2.3.1 表单类型：Form Data</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_body</span><span class="params">(request)</span>:</span></span><br><span class="line">    a = request.POST.get(<span class="string">'a'</span>)</span><br><span class="line">    b = request.POST.get(<span class="string">'b'</span>)</span><br><span class="line">    alist = request.POST.getlist(<span class="string">'a'</span>)</span><br><span class="line">    print(a)</span><br><span class="line">    print(b)</span><br><span class="line">    print(alist)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">'OK'</span>)</span><br></pre></td></tr></table></figure><h5 id="2-3-2-非表单类型-：Non-Form-Data（json，xml）"><a href="#2-3-2-非表单类型-：Non-Form-Data（json，xml）" class="headerlink" title="2.3.2 非表单类型 ：Non-Form Data（json，xml）"></a>2.3.2 非表单类型 ：Non-Form Data（json，xml）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_body_json</span><span class="params">(request)</span>:</span></span><br><span class="line">    json_str = request.body</span><br><span class="line">    json_str = json_str.decode()  <span class="comment"># python3.6 无需执行此步</span></span><br><span class="line">    req_data = json.loads(json_str)</span><br><span class="line">    print(req_data[<span class="string">'a'</span>])</span><br><span class="line">    print(req_data[<span class="string">'b'</span>])</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">'OK'</span>)</span><br></pre></td></tr></table></figure><h4 id="2-4-请求头"><a href="#2-4-请求头" class="headerlink" title="2.4 请求头"></a>2.4 请求头</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_headers</span><span class="params">(request)</span>:</span></span><br><span class="line">    print(request.META[<span class="string">'CONTENT_TYPE'</span>])</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">'OK'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>django框架一</title>
      <link href="/2016/12/02/django%E6%A1%86%E6%9E%B6_day01/"/>
      <url>/2016/12/02/django%E6%A1%86%E6%9E%B6_day01/</url>
      
        <content type="html"><![CDATA[<h2 id="一、django框架的注意点："><a href="#一、django框架的注意点：" class="headerlink" title="一、django框架的注意点："></a>一、django框架的注意点：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1.如何搭建虚拟环境? 安装虚拟环境的命令 :</span><br><span class="line">  sudo pip install virtualenv</span><br><span class="line">  sudo pip install virtualenvwrapper</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>安装完虚拟环境后，如果提示找不到mkvirtualenv命令，须配置环境变量：</span><br><span class="line">  <span class="number">2.1</span> 创建目录用来存放虚拟环境</span><br><span class="line">   mkdir $HOME/.virtualenvs</span><br><span class="line"></span><br><span class="line">  <span class="number">2.2</span> 打开~/.bashrc文件，并添加如下：</span><br><span class="line">    export WORKON_HOME=$HOME/.virtualenvs</span><br><span class="line">    source /usr/local/bin/virtualenvwrapper.sh</span><br><span class="line">    </span><br><span class="line"><span class="number">3.</span>运行</span><br><span class="line">    source ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>创建虚拟环境的常用两种方式；</span><br><span class="line">    <span class="number">4.1</span>  mkvirtualenv venv_name -p python3</span><br><span class="line">    <span class="number">4.2</span>. mkvirtualenv --python=/usr/local/python3<span class="number">.5</span><span class="number">.3</span>/bin/python venv_name</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>djnango自动生成urls文件配置：</span><br><span class="line">   <span class="number">5.1</span> 在所用的虚拟环境中，例如django_py3/lib/python3<span class="number">.5</span>/site-packages/django/conf下，将project_template/project_name/urls.py-tpl复制到app_template下即可</span><br></pre></td></tr></table></figure><h2 id="二、HTTP协议向服务器传参有4种途径："><a href="#二、HTTP协议向服务器传参有4种途径：" class="headerlink" title="二、HTTP协议向服务器传参有4种途径："></a>二、HTTP协议向服务器传参有4种途径：</h2><h4 id="2-1-URL路径参数"><a href="#2-1-URL路径参数" class="headerlink" title="2.1 URL路径参数:"></a>2.1 URL路径参数:</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># http://127.0.0.1:8000/users/index/2018/beijing</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request,year,city)</span>:</span></span><br><span class="line">    print(<span class="string">"city=&#123;1&#125;,year=&#123;0&#125;"</span>.format(year,city))</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">"ok"</span>)</span><br></pre></td></tr></table></figure><h4 id="2-2-查询字符串（query-string-，形如key1-value1-amp-key2-value2："><a href="#2-2-查询字符串（query-string-，形如key1-value1-amp-key2-value2：" class="headerlink" title="2.2 查询字符串（query string)，形如key1=value1&amp;key2=value2："></a>2.2 查询字符串（query string)，形如key1=value1&amp;key2=value2：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /qs/?a=1&amp;b=2&amp;a=3</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">qs</span><span class="params">(request)</span>:</span></span><br><span class="line">    a = request.GET.get(<span class="string">'a'</span>)</span><br><span class="line">    b = request.GET.get(<span class="string">'b'</span>)</span><br><span class="line">    alist = request.GET.getlist(<span class="string">'a'</span>)</span><br><span class="line">    print(a)  <span class="comment"># 3</span></span><br><span class="line">    print(b)  <span class="comment"># 2</span></span><br><span class="line">    print(alist)  <span class="comment"># ['1', '3']</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">'OK'</span>)</span><br></pre></td></tr></table></figure><h4 id="2-3-请求体传参："><a href="#2-3-请求体传参：" class="headerlink" title="2.3 请求体传参："></a>2.3 请求体传参：</h4><h5 id="2-3-1-表单类型：Form-Data"><a href="#2-3-1-表单类型：Form-Data" class="headerlink" title="2.3.1 表单类型：Form Data"></a>2.3.1 表单类型：Form Data</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_body</span><span class="params">(request)</span>:</span></span><br><span class="line">    a = request.POST.get(<span class="string">'a'</span>)</span><br><span class="line">    b = request.POST.get(<span class="string">'b'</span>)</span><br><span class="line">    alist = request.POST.getlist(<span class="string">'a'</span>)</span><br><span class="line">    print(a)</span><br><span class="line">    print(b)</span><br><span class="line">    print(alist)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">'OK'</span>)</span><br></pre></td></tr></table></figure><h5 id="2-3-2-非表单类型-：Non-Form-Data（json，xml）"><a href="#2-3-2-非表单类型-：Non-Form-Data（json，xml）" class="headerlink" title="2.3.2 非表单类型 ：Non-Form Data（json，xml）"></a>2.3.2 非表单类型 ：Non-Form Data（json，xml）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_body_json</span><span class="params">(request)</span>:</span></span><br><span class="line">    json_str = request.body</span><br><span class="line">    json_str = json_str.decode()  <span class="comment"># python3.6 无需执行此步</span></span><br><span class="line">    req_data = json.loads(json_str)</span><br><span class="line">    print(req_data[<span class="string">'a'</span>])</span><br><span class="line">    print(req_data[<span class="string">'b'</span>])</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">'OK'</span>)</span><br></pre></td></tr></table></figure><h4 id="2-4-请求头"><a href="#2-4-请求头" class="headerlink" title="2.4 请求头"></a>2.4 请求头</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_headers</span><span class="params">(request)</span>:</span></span><br><span class="line">    print(request.META[<span class="string">'CONTENT_TYPE'</span>])</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">'OK'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
